// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Api.Models;

public partial class SmartForexDBContext : DbContext
{
    public SmartForexDBContext(DbContextOptions<SmartForexDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<CommunityComment> CommunityComments { get; set; }

    public virtual DbSet<CommunityPost> CommunityPosts { get; set; }

    public virtual DbSet<DashboardMetric> DashboardMetrics { get; set; }

    public virtual DbSet<OptimizerConfig> OptimizerConfigs { get; set; }

    public virtual DbSet<RateRule> RateRules { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<CommunityComment>(entity =>
        {
            entity.HasKey(e => e.CommentId).HasName("PK__Communit__C3B4DFCAD2BDD896");

            entity.Property(e => e.Body).IsRequired();
            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(sysutcdatetime())");

            entity.HasOne(d => d.Post).WithMany(p => p.CommunityComments)
                .HasForeignKey(d => d.PostId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Community__PostI__4CA06362");

            entity.HasOne(d => d.User).WithMany(p => p.CommunityComments)
                .HasForeignKey(d => d.UserId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Community__UserI__4D94879B");
        });

        modelBuilder.Entity<CommunityPost>(entity =>
        {
            entity.HasKey(e => e.PostId).HasName("PK__Communit__AA12601864B9CD00");

            entity.Property(e => e.Body).IsRequired();
            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(sysutcdatetime())");
            entity.Property(e => e.Title)
                .IsRequired()
                .HasMaxLength(200);

            entity.HasOne(d => d.User).WithMany(p => p.CommunityPosts)
                .HasForeignKey(d => d.UserId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Community__UserI__48CFD27E");
        });

        modelBuilder.Entity<DashboardMetric>(entity =>
        {
            entity.HasKey(e => e.MetricId).HasName("PK__Dashboar__561056A582E551AB");

            entity.Property(e => e.LastUpdated).HasDefaultValueSql("(sysutcdatetime())");
            entity.Property(e => e.MetricName)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.MetricValue).HasColumnType("decimal(18, 4)");

            entity.HasOne(d => d.User).WithMany(p => p.DashboardMetrics)
                .HasForeignKey(d => d.UserId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Dashboard__UserI__3B75D760");
        });

        modelBuilder.Entity<OptimizerConfig>(entity =>
        {
            entity.HasKey(e => e.ConfigId).HasName("PK__Optimize__C3BC335C74531BC4");

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(sysutcdatetime())");
            entity.Property(e => e.ParameterName)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.ParameterValue)
                .IsRequired()
                .HasMaxLength(255);

            entity.HasOne(d => d.User).WithMany(p => p.OptimizerConfigs)
                .HasForeignKey(d => d.UserId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Optimizer__UserI__3F466844");
        });

        modelBuilder.Entity<RateRule>(entity =>
        {
            entity.HasKey(e => e.RateRuleId).HasName("PK__RateRule__3990FDDA8C0D6D72");

            entity.Property(e => e.Condition)
                .IsRequired()
                .HasMaxLength(10);
            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(sysutcdatetime())");
            entity.Property(e => e.CurrencyPair)
                .IsRequired()
                .HasMaxLength(10);
            entity.Property(e => e.IsActive).HasDefaultValue(true);
            entity.Property(e => e.TargetRate).HasColumnType("decimal(18, 6)");

            entity.HasOne(d => d.User).WithMany(p => p.RateRules)
                .HasForeignKey(d => d.UserId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__RateRules__UserI__44FF419A");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.UserId).HasName("PK__Users__1788CC4C571D4F20");

            entity.HasIndex(e => new { e.AuthProvider, e.ProviderUserId }, "UQ_User_Provider").IsUnique();

            entity.Property(e => e.AuthProvider)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.AvatarUrl).HasMaxLength(500);
            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(sysutcdatetime())");
            entity.Property(e => e.DisplayName).HasMaxLength(100);
            entity.Property(e => e.Email).HasMaxLength(255);
            entity.Property(e => e.ProviderUserId)
                .IsRequired()
                .HasMaxLength(200);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}